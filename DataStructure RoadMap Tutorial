# Intuition
<!-- Describe your first thoughts on how to solve this problem. -->

# Approach
<!-- Describe your approach to solving the problem. -->

# Complexity
- Time complexity:
<!-- Add your time complexity here, e.g. $$O(n)$$ -->

- Space complexity:
<!-- Add your space complexity here, e.g. $$O(n)$$ -->

# Code
```java []
class Solution {
    public int[] twoSum(int[] nums, int target) {
 HashMap<Integer, Integer> map = new HashMap<>();

for (int i = 0; i < nums.length; i++) {
 int complement = target - nums[i];
 
 if(map.containsKey(complement)){
    return new int[]{map.get(complement),i};
 }
 map.put(nums[i],i);

    }
return new int[] {};
}

}
